---
name: Dotfiles Testing

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC

jobs:
  test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up test environment
        run: |
          brew install python3 shellcheck yamllint ripgrep || true
          pip3 install --user pyyaml || true

      - name: Run infrastructure tests
        run: |
          chmod +x tests/test_runner.sh
          ./tests/test_runner.sh --category infrastructure

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-macos
          path: tests/results/

  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up test environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip zsh tmux git

      - name: Run infrastructure tests
        run: |
          chmod +x tests/test_runner.sh
          ./tests/test_runner.sh --category infrastructure

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-ubuntu
          path: tests/results/

  test-installation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test minimal installation
        run: |
          chmod +x install.sh
          ./install.sh --dry-run install minimal

      - name: Test standard installation
        run: ./install.sh --dry-run install standard

      - name: Test full installation
        run: ./install.sh --dry-run install full

      - name: Test health check
        run: |
          if [[ -f "scripts/health-check.sh" ]]; then
            chmod +x scripts/health-check.sh
            ./scripts/health-check.sh
          fi

  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run security checks
        run: |
          sudo apt-get update && sudo apt-get install -y ripgrep || true
          # Check for potential secrets in tracked files
          if rg -n "password|secret|api[_-]?key|private[_-]?key" \
            --glob '!tests/**' --glob '!docs/**' --glob '!**/*.md'; then
            echo "Potential sensitive data found" && exit 1
          fi

          # Ensure shell scripts are executable
          if find . -name "*.sh" -not -path './tests/*' -exec test -x {} \; | grep -q .; then
            echo "Some shell scripts are not executable" && exit 1
          fi

          # Block obviously dangerous commands
          if rg -n "rm\s+-rf\s+/" --glob '!tests/**' --glob '!docs/**' .; then
            echo "Dangerous rm command found" && exit 1
          fi

  lint-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck python3-pip
          pip3 install --user yamllint

      - name: Run shellcheck (errors only)
        run: |
          set -o pipefail
          # Skip non-bash/zsh files
          mapfile -t files < <(git ls-files '*.sh')
          for f in "${files[@]}"; do
            shebang=$(head -1 "$f" || true)
            case "$shebang" in
              *osascript*) continue ;;
              *zsh*) shellcheck -S error "$f" || true; continue ;;
              *) shellcheck -S error "$f" || true ;;
            esac
          done

      - name: Run yamllint
        run: |
          yamllint -d '{extends: default, rules: {line-length: {max: 150}, truthy: disable}}' -s .

  cross-platform-check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Cross-platform smoke
        run: |
          chmod +x install.sh
          ./install.sh --dry-run profiles
          if [[ -f "scripts/health-check.sh" ]]; then
            chmod +x scripts/health-check.sh
            ./scripts/health-check.sh || true
          fi