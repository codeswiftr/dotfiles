# ============================================================================
# Tmux Advanced Key Bindings (Tier 3)  
# Power user features and development workflows
# ============================================================================

# ----- Project & Session Management -----
bind p run-shell "tmux neww 'bash $HOME/dotfiles/scripts/tmux/tmux-sessionizer'" \; display "Project sessionizer"
bind P command-prompt -p "Project session name:" "new-session -d -s %% -c ~/projects/%%"
bind C-f command-prompt -p "Find session:" "switch-client -t %%"

# ----- Development Layouts -----
bind L run-shell "$HOME/dotfiles/scripts/tmux/dev-layout.sh" \; display "Development layout"
bind A run-shell "$HOME/dotfiles/scripts/tmux/ai-layout.sh" \; display "AI development layout"  
bind W run-shell "$HOME/dotfiles/scripts/tmux/web-layout.sh" \; display "Web development layout"

# ----- AI Integration Shortcuts -----
bind C-a split-window -h -c "#{pane_current_path}" "aider" \; display "Aider AI session"
bind C-c split-window -h -c "#{pane_current_path}" "claude --interactive" \; display "Claude AI session"
bind C-g split-window -h -c "#{pane_current_path}" "gemini --interactive" \; display "Gemini AI session"

# ----- Development Tools -----
bind D split-window -v -p 30 -c "#{pane_current_path}" "docker compose up" \; display "Docker compose"
bind N split-window -h -p 40 -c "#{pane_current_path}" "bun run dev || npm run dev" \; display "Dev server"
bind F split-window -h -c "#{pane_current_path}" "fastapi dev" \; display "FastAPI dev server"
bind M split-window -v -p 25 -c "#{pane_current_path}" "htop" \; display "System monitor"

# ----- Testing & QA -----
bind T split-window -h -c "#{pane_current_path}" "npm test || pytest" \; display "Running tests"
bind B split-window -v -c "#{pane_current_path}" "bruno" \; display "API testing"
bind C-t split-window -v -p 30 -c "#{pane_current_path}" "pytest-watch" \; display "Test watcher"

# ----- Git Workflows -----
bind G run-shell "tmux new-window -n 'git' 'git log --oneline --graph --all'" \; display "Git log"
bind C-b split-window -h -c "#{pane_current_path}" "git branch -a" \; display "Git branches"
bind C-d split-window -h -c "#{pane_current_path}" "git diff" \; display "Git diff"

# ----- Advanced Window Management -----
bind + run 'tmux list-panes -F "#F" | grep -q Z && tmux resize-pane -Z || tmux resize-pane -Z'
bind = select-layout tiled \; display "Tiled layout"
bind Enter break-pane -d \; display "Pane moved to background window"

# ----- Clipboard & System Integration -----
bind C-c run-shell "tmux show-buffer | head -c 2000" \; display "Clipboard preview"
bind C-v run-shell "$HOME/dotfiles/scripts/tmux-clipboard.sh paste | tmux load-buffer - && tmux paste-buffer"
bind C-s run-shell "$HOME/dotfiles/scripts/tmux-clipboard.sh status" \; display "Clipboard status"

# ----- Quick TODO & Notes -----
bind T split-window -b -p 35 -h -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/dotfiles/todo.md" \; display "TODO notes"
bind O split-window -h -c "#{pane_current_path}" "ranger || lf || eza --tree" \; display "File explorer"

# ----- Advanced Help -----
bind C-? new-window -n "HELP-T3" 'cat << "EOF"

ðŸš€ TMUX ADVANCED COMMANDS (Tier 3)

PROJECT MANAGEMENT:
  Ctrl-a p         Project sessionizer (fuzzy find)
  Ctrl-a P         New project session  
  Ctrl-a Ctrl-f    Find session by name

DEVELOPMENT LAYOUTS:
  Ctrl-a L         Development layout (editor + terminal + logs)
  Ctrl-a A         AI development layout (4-pane with AI)
  Ctrl-a W         Web development layout (editor + server + browser)

AI INTEGRATION:
  Ctrl-a Ctrl-a    Aider AI coding assistant
  Ctrl-a Ctrl-c    Claude AI interactive session
  Ctrl-a Ctrl-g    Gemini AI interactive session

DEVELOPMENT TOOLS:
  Ctrl-a D         Docker compose up
  Ctrl-a N         Start dev server (npm/bun)
  Ctrl-a F         FastAPI dev server
  Ctrl-a M         System monitor (htop)

TESTING & QA:
  Ctrl-a T         Run tests (npm test/pytest)
  Ctrl-a B         Bruno API testing
  Ctrl-a Ctrl-t    Test watcher (pytest-watch)

GIT WORKFLOWS:
  Ctrl-a G         Git log graph
  Ctrl-a Ctrl-b    Git branches
  Ctrl-a Ctrl-d    Git diff

PRODUCTIVITY:
  Ctrl-a T         TODO notes editor
  Ctrl-a O         File explorer
  Ctrl-a =         Tiled layout
  Ctrl-a +         Smart pane toggle

CLIPBOARD ADVANCED:
  Ctrl-a Ctrl-c    Show clipboard content
  Ctrl-a Ctrl-v    Smart paste
  Ctrl-a Ctrl-s    Clipboard status

ðŸŽ¯ EXPERT MODE UNLOCKED!
You have access to all tmux productivity features.
Create custom layouts and workflows in:
  ~/.tmux.local.conf

Press q to close this help.

EOF
read'