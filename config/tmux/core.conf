# ============================================================================ 
# CORE SETTINGS - Essential Foundation 
# ============================================================================ 

# Set prefix to Ctrl-a (more ergonomic than Ctrl-b) 
unbind C-b 
set -g prefix C-a 
bind C-a send-prefix 

# Essential server options 
set -g default-terminal "screen-256color" 
set -ga terminal-overrides ",xterm-256color:Tc" 
set -g history-limit 10000 
set -g buffer-limit 20 
set -sg escape-time 0 
set -g display-time 1500 
set -g remain-on-exit off 
set -g repeat-time 300 

# Change window/pane indexing to start from 1 
set -g base-index 1 
setw -g pane-base-index 1 

# Automatically renumber windows when one is deleted 
set -g renumber-windows on 

# ============================================================================ 
# MOUSE SUPPORT - Perfect Copy/Paste Experience 
# ============================================================================ 

# Enable full mouse support 
set -g mouse on 

# Mouse drag enters copy mode and starts selection 
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"' 'copy-mode -M' 

# Double click selects word and copies to system clipboard 
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word \; run-shell "sleep .5s" \; send-keys -X copy-pipe-and-cancel "pbcopy" 

# Triple click selects line and copies to system clipboard  
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-line \; run-shell "sleep .5s" \; send-keys -X copy-pipe-and-cancel "pbcopy" 

# ============================================================================ 
# COPY MODE - Perfect Vi-Style Copy/Paste 
# ============================================================================ 

# Use vi-style copy mode 
setw -g mode-keys vi 

# Copy mode bindings for perfect workflow 
bind [ copy-mode 
bind ] paste-buffer 

# Vi-style copy mode bindings 
bind -T copy-mode-vi v send-keys -X begin-selection 
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle 
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy" 
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy" 
bind -T copy-mode-vi Escape send-keys -X cancel 
bind -T copy-mode-vi q send-keys -X cancel 

# Additional useful copy mode bindings 
bind -T copy-mode-vi H send-keys -X start-of-line 
bind -T copy-mode-vi L send-keys -X end-of-line 
bind -T copy-mode-vi Space send-keys -X begin-selection 
bind -T copy-mode-vi C-h send-keys -X cursor-left 
bind -T copy-mode-vi C-j send-keys -X cursor-down  
bind -T copy-mode-vi C-k send-keys -X cursor-up 
bind -T copy-mode-vi C-l send-keys -X cursor-right 

# Mouse copy to system clipboard in copy mode 
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy" 

# Quick copy shortcuts 
bind C-c run "tmux save-buffer - | pbcopy" 
bind C-v run "tmux set-buffer \"$(pbpaste)\" ; tmux paste-buffer" 

# ============================================================================ 
# ESSENTIAL KEYBINDINGS - Only What You Need 
# ============================================================================ 

# Window operations (using defaults - c for new-window)
# bind c new-window -c "#{pane_current_path}"  # Removed: conflicts with default
bind & confirm-before -p "kill-window #W? (y/n)" kill-window 
bind , command-prompt -I "#W" "rename-window '%%'" 

# Pane operations  
bind | split-window -h -c "#{pane_current_path}" 
bind - split-window -v -c "#{pane_current_path}" 
bind x confirm-before -p "kill-pane #P? (y/n)" kill-pane 

# Pane navigation (vi-style) 
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U 
bind l select-pane -R 

# Pane resizing (repeatable) 
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5 

# Window navigation 
bind -r C-h previous-window 
bind -r C-l next-window 
bind Tab last-window 

# Session operations (using defaults - d for detach-client)
# bind d detach-client  # Removed: conflicts with default
bind s choose-session 
bind '$' command-prompt -I "#S" "rename-session '%%'" 

# Configuration reload 
bind r source-file ~/.tmux.conf \; display "Configuration reloaded!" 

# ============================================================================ 
# ORGANIZED TOOL ACCESS - No Conflicts, Perfect UX 
# ============================================================================ 

# AI Tools (Ctrl-a + A) 
bind A display-menu -T "#[align=centre]ü§ñ AI Tools" -x C -y C \ 
    "Claude Interactive" c "new-window -n 'Claude' 'claude --interactive'" \ 
    "Aider Code Assistant" a "new-window -n 'Aider' 'aider'" \ 
    "Gemini Chat" g "new-window -n 'Gemini' 'gemini --interactive'" \ 
    "AI Code Review" r "new-window -n 'AI-Review' 'ai-review-branch'" \ 
    "AI Documentation" o "new-window -n 'AI-Docs' 'ai-analyze documentation'" \ 
    '' \ 
    "Cancel" q "" 

# Development Tools (Ctrl-a + D) 
bind D display-menu -T "#[align=centre]üõ†Ô∏è  Dev Tools" -x C -y C \ 
    "Docker Compose" d "new-window -n 'Docker' 'docker compose up'" \ 
    "FastAPI Dev" f "new-window -n 'FastAPI' 'fastapi dev'" \ 
    "Node/Bun Dev" n "new-window -n 'Node' 'bun run dev || npm run dev'" \ 
    "Python REPL" p "new-window -n 'Python' 'python3'" \ 
    "File Explorer" e "new-window -n 'Files' 'ranger || lf || eza --tree'" \ 
    "Database Console" b "new-window -n 'DB' 'psql || mysql || sqlite3'" \ 
    '' \ 
    "Cancel" q "" 

# Testing Tools (Ctrl-a + T)  
bind T display-menu -T "#[align=centre]üß™ Testing" -x C -y C \ 
    "Pytest Watch" p "new-window -n 'Pytest' 'pytest-watch'" \ 
    "Playwright Tests" w "new-window -n 'Playwright' 'bunx playwright test --ui'" \ 
    "Bruno API Tests" b "new-window -n 'Bruno' 'bruno'" \ 
    "K6 Load Tests" k "new-window -n 'K6' 'k6 run loadtest.js'" \ 
    "Jest Watch" j "new-window -n 'Jest' 'npm run test:watch'" \ 
    "Test Coverage" c "new-window -n 'Coverage' 'npm run test:coverage'" \ 
    '' \ 
    "Cancel" q "" 

# Git & Version Control (Ctrl-a + G) 
bind G display-menu -T "#[align=centre]üìã Git Tools" -x C -y C \ 
    "Git Status" s "new-window -n 'Git-Status' 'git status && read'" \ 
    "Git Log Graph" l "new-window -n 'Git-Log' 'git log --oneline --graph --all && read'" \ 
    "Git Diff" d "new-window -n 'Git-Diff' 'git diff && read'" \ 
    "Git Interactive" i "new-window -n 'Git' 'git status && bash'" \ 
    "Git Blame" b "new-window -n 'Git-Blame' 'git blame .' && read'" \ 
    '' \ 
    "Cancel" q "" 

# System Monitoring (Ctrl-a + M) 
bind M display-menu -T "#[align=centre]üìä Monitoring" -x C -y C \ 
    "System Monitor" h "new-window -n 'Htop' 'htop'" \ 
    "Process Monitor" p "new-window -n 'Processes' 'ps aux | head -20 && read'" \ 
    "Network Monitor" n "new-window -n 'Network' 'netstat -tuln && read'" \ 
    "Disk Usage" d "new-window -n 'Disk' 'df -h && read'" \ 
    "Memory Usage" m "new-window -n 'Memory' 'free -h && read'" \ 
    '' \ 
    "Cancel" q "" 

# ============================================================================ 
# WINDOW SELECTION - Quick Access 
# ============================================================================ 

bind 1 select-window -t 1 
bind 2 select-window -t 2  
bind 3 select-window -t 3 
bind 4 select-window -t 4 
bind 5 select-window -t 5 
bind 6 select-window -t 6 
bind 7 select-window -t 7 
bind 8 select-window -t 8 
bind 9 select-window -t 9 
bind 0 select-window -t 10 

# ============================================================================ 
# HELP SYSTEM - Comprehensive Reference 
# ============================================================================ 

bind ? new-window -n "TMUX-HELP" 'cat << "EOF" 

üöÄ ULTIMATE TMUX COMMANDS - PERFECT DEVELOPER EXPERIENCE

ESSENTIAL OPERATIONS (GUARANTEED TO WORK):
  Ctrl-a c     Create new window 
  Ctrl-a d     Detach session
  Ctrl-a x     Close pane (with confirmation)
  Ctrl-a |     Split horizontally  
  Ctrl-a -     Split vertically

NAVIGATION (VI-STYLE):
  Ctrl-a h/j/k/l     Navigate panes
  Ctrl-a H/J/K/L     Resize panes (hold Ctrl, repeatable)
  Ctrl-a Tab         Last window
  Ctrl-a C-h/C-l     Previous/Next window
  Ctrl-a 1-9         Go to window number

COPY/PASTE (PERFECT WORKFLOW):
  Mouse drag         Automatic copy to clipboard
  Double-click       Select word and copy
  Triple-click       Select line and copy
  Ctrl-a [           Enter copy mode manually
  v                  Start selection (in copy mode)
  y                  Copy to clipboard (in copy mode)
  Ctrl-a ]           Paste from clipboard
  Ctrl-a C-c         Copy current pane to clipboard
  Ctrl-a C-v         Paste from system clipboard

TOOL MENUS (ORGANIZED, NO CONFLICTS):
  Ctrl-a A     ü§ñ AI Tools (Claude, Aider, Gemini)
  Ctrl-a D     üõ†Ô∏è  Dev Tools (Docker, FastAPI, Node)
  Ctrl-a T     üß™ Testing (Pytest, Playwright, Jest)
  Ctrl-a G     üìã Git Tools (Status, Log, Diff)
  Ctrl-a M     üìä Monitoring (Htop, Processes, Network)

SESSION MANAGEMENT:
  Ctrl-a s     Session picker
  Ctrl-a $     Rename session
  Ctrl-a ,     Rename window
  Ctrl-a r     Reload config

HELP & DISCOVERY:
  Ctrl-a ?     This comprehensive help

FEATURES:
  ‚úÖ Perfect copy/paste with system clipboard
  ‚úÖ Full mouse support (drag, click, scroll)
  ‚úÖ Vi-style navigation and copy mode
  ‚úÖ Only essential keybindings (no conflicts)
  ‚úÖ Organized tool access via menus
  ‚úÖ Beautiful Catppuccin theme
  ‚úÖ Smart window management

Press q to close this help.

EOF
read' 

# ============================================================================ 
# PERFORMANCE OPTIMIZATIONS 
# ============================================================================ 

# Faster command sequences 
set -s escape-time 0 

# Increase repeat time for repeatable commands 
set -g repeat-time 600 

# Increase scrollback buffer 
set -g history-limit 50000 

# Focus events for vim/nvim 
set -g focus-events on 

# Aggressive resize for better experience 
setw -g aggressive-resize on 

# ---------------------------------------------------------------------------
# WINDOW/TITLE FORMATTING
# - Window title shows index and name
# - Terminal/tab title shows "session:window"
# ---------------------------------------------------------------------------
set -g set-titles on
set -g set-titles-string "#S:#W"
setw -g automatic-rename on
setw -g automatic-rename-format "#I:#W"
