# sets prefix to Ctrl-a - which can be done with one hand
set -g default-command "$SHELL"
set -g prefix C-a
bind-key C-a send-prefix
unbind C-b

set -g status-style 'bg=#333333 fg=#5eacd3'

# edit configuration
bind e new-window -n "~/.tmux.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# set start index
set -g base-index 1
set -g pane-base-index 1

# set title
setw -g automatic-rename on
set -g set-titles on

# longer display line

set -g display-time 2000
set -g status-interval 10

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# enable vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Setup 'v' to begin selection, just like Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Setup 'y' to yank (copy), just like Vim
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# pane resizing
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# enable vim-like pane switching
bind -r k select-pane -U
bind -r j select-pane -D

bind -r h select-pane -L
bind -r l select-pane -R

bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window


# quick todo
bind -r T split-window -b -p 35 -h -c "#{pane_current_path}" "[[-e TODO.md]] && vim TODO.md || vim ~/dotfiles/todo.md"

# boost history

set -g history-limit 5000

set -g status-position top

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
		bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
		bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
		bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
		bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
		tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
		if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1  ]' \
		    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
				if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1  ]' \
				    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

						bind-key -T copy-mode-vi 'C-h' select-pane -L
                        bind-key -T copy-mode-vi 'C-j' select-pane -D
						bind-key -T copy-mode-vi 'C-k' select-pane -U
						bind-key -T copy-mode-vi 'C-l' select-pane -R
						bind-key -T copy-mode-vi 'C-\' select-pane -l

##############
# status line logic
################

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} ‚ùê #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],}ÓÇ∞#{?window_zoomed_flag, üîç,}"

set-option -g status-right "\
#[fg=colour223, bg=colour237] #(~/dotfiles/scripts/temp.sh)¬∞C\
#[fg=colour214, bg=colour237] ÓÇ≤\
#[fg=colour237, bg=colour214] #(~/dotfiles/scripts/music.sh) ÓÇ≤\
#[fg=colour223, bg=colour237] #(echo $USER) \
#[fg=colour214, bg=colour237] ÓÇ≤\
#[fg=colour237, bg=colour214] #(hostname -s) ÓÇ≤\
#[fg=colour246, bg=colour237] ÓÇ≥ %b %d '%y\
#[fg=colour109] ÓÇ≥ %H:%M \
#[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214]ÓÇ∞\
#[fg=colour239, bg=colour214] #I* ÓÇ±\
#[fg=colour239, bg=colour214, bold] #W \
#[fg=colour214, bg=colour237]ÓÇ∞"

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics]ÓÇ∞\
#[fg=colour223,bg=colour239] #I ÓÇ±\
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237]ÓÇ∞"

########3 status line end

#rename pane 
set -g pane-border-status top
set -g pane-border-format "#{pane_index} #T "
bind-key -T prefix P send-keys prefix : select-pane -T  

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'wfxr/tmux-fzf-url'
set -g @tmux-gruvbox 'dark' # or 'light'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
