# ============================================================================
# Modern Tmux Configuration - 2025 Edition
# ============================================================================

# ----- Core Settings -----
# Set prefix to Ctrl-a (easier than Ctrl-b)
set -g default-command "$SHELL"
set -g prefix C-a
bind-key C-a send-prefix
unbind C-b

# Enable true color support
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# Enable mouse support
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Set scrollback buffer size
set -g history-limit 50000

# Display time
set -g display-time 2000
set -g status-interval 5

# Reduce escape time for faster command sequences
set -sg escape-time 0

# Enable focus events for better terminal integration
set -g focus-events on

# ----- Key Bindings -----
# Reload configuration
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Edit configuration
bind e new-window -n "~/.tmux.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# Better window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# Pane navigation (vim-like)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Window navigation
bind -r C-h previous-window
bind -r C-l next-window
bind Tab last-window

# Session navigation
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Quick TODO window
bind -r T split-window -b -p 35 -h -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/dotfiles/todo.md"

# Copy mode improvements
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Maximize/minimize pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# Project session management
bind P command-prompt -p "Project session name:" "new-session -d -s %% -c ~/work/%%"
bind S choose-session

# ----- Window & Pane Settings -----
# Window title settings
setw -g automatic-rename on
set -g set-titles on
set -g set-titles-string "#I:#W"

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Pane border format (shows pane title)
set -g pane-border-status top
set -g pane-border-format "#{pane_index} #T #{?pane_active,#[reverse],}#{pane_current_command}#{?pane_active,#[noreverse],}"

# ----- Plugin Configuration -----
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'catppuccin/tmux'

# ----- Plugin Settings -----
# tmux-resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# tmux-continuum settings (auto-save sessions)
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'

# vim-tmux-navigator settings
set -g @plugin 'christoomey/vim-tmux-navigator'

# tmux-fzf settings
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'

# Catppuccin theme settings (Modern 2025 theme)
set -g @catppuccin_flavour 'mocha'

# Catppuccin window format
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"

# Catppuccin status line
set -g @catppuccin_status_modules_right "directory cpu battery date_time"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

# Catppuccin directory module
set -g @catppuccin_directory_text "#{pane_current_path}"

# Catppuccin date time format
set -g @catppuccin_date_time_text "%H:%M"
set -g @fzf-url-history-limit '2000'

# tmux-yank settings
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-and-cancel'

# ----- Status Bar Configuration -----
set -g status-position top
set -g status-justify left
set -g status-style 'bg=#1d2021 fg=#ebdbb2'

# Status bar length
set -g status-left-length 50
set -g status-right-length 150

# Left status (session info)
set -g status-left '#[fg=#282828,bg=#83a598,bold] ❐ #S #[fg=#83a598,bg=#3c3836]#[fg=#ebdbb2,bg=#3c3836] #(whoami) #[fg=#3c3836,bg=#1d2021]'

# Right status (system info)
set -g status-right '#[fg=#3c3836,bg=#1d2021]#[fg=#ebdbb2,bg=#3c3836] #{cpu_percentage} #[fg=#83a598,bg=#3c3836]#[fg=#282828,bg=#83a598,bold] #{battery_percentage} #[fg=#fe8019,bg=#83a598]#[fg=#282828,bg=#fe8019,bold] %H:%M #[fg=#fb4934,bg=#fe8019]#[fg=#282828,bg=#fb4934,bold] %d %b '

# Window status format
set -g window-status-current-style 'fg=#282828,bg=#fabd2f,bold'
set -g window-status-current-format ' #I #W #F '

set -g window-status-style 'fg=#ebdbb2,bg=#3c3836'
set -g window-status-format ' #I #W #F '

# Window status separator
set -g window-status-separator ''

# ----- Pane Border Styling -----
set -g pane-border-style 'fg=#3c3836'
set -g pane-active-border-style 'fg=#83a598'

# ----- Message Styling -----
set -g message-style 'fg=#ebdbb2,bg=#3c3836,bold'
set -g message-command-style 'fg=#ebdbb2,bg=#3c3836,bold'

# ----- Copy Mode Styling -----
set -g mode-style 'fg=#282828,bg=#fe8019,bold'

# ----- Clock Mode Styling -----
set -g clock-mode-colour '#83a598'
set -g clock-mode-style 24

# ----- Custom Functions -----
# Function to maximize/restore pane
bind-key -T prefix m run-shell 'tmux list-panes -F "#F" | grep -q Z && tmux resize-pane -Z || tmux resize-pane -Z'

# Function to create project session
bind-key -T prefix p run-shell "tmux neww 'bash ~/.config/tmux/scripts/tmux-sessionizer'"

# ----- AI Integration Shortcuts -----
# Quick aider session
bind-key -T prefix a split-window -h -c "#{pane_current_path}" "aider"

# Claude Code CLI session
bind-key -T prefix c split-window -h -c "#{pane_current_path}" "claude --interactive"

# Gemini CLI session  
bind-key -T prefix G split-window -h -c "#{pane_current_path}" "gemini --interactive"

# Quick Python REPL
bind-key -T prefix y split-window -v -c "#{pane_current_path}" "python"

# Quick git status
bind-key -T prefix g split-window -v -c "#{pane_current_path}" "git status && echo 'Press enter to continue...' && read"

# AI Code Review session
bind-key -T prefix C run-shell "tmux new-window -n 'ai-review' 'claude --review $(find . -name \"*.py\" -o -name \"*.js\" -o -name \"*.ts\" -o -name \"*.swift\" | head -10)'"

# AI Documentation session
bind-key -T prefix D run-shell "tmux new-window -n 'ai-docs' 'claude --doc README.md'"

# ----- Development Shortcuts -----
# FastAPI dev server
bind-key -T prefix f split-window -h -c "#{pane_current_path}" "fastapi dev"

# Docker compose
bind-key -T prefix d split-window -v -c "#{pane_current_path}" "docker compose up"

# npm/bun dev
bind-key -T prefix n split-window -h -c "#{pane_current_path}" "bun run dev || npm run dev"

# ----- Session Templates -----
# Python development layout
bind-key -T prefix P run-shell '
    tmux new-session -d -s python-dev -c "#{pane_current_path}" \; \
    split-window -h -c "#{pane_current_path}" \; \
    split-window -v -c "#{pane_current_path}" "python" \; \
    select-pane -t 0 \; \
    send-keys "nvim" Enter \; \
    attach-session -t python-dev
'

# Web development layout
bind-key -T prefix W run-shell '
    tmux new-session -d -s web-dev -c "#{pane_current_path}" \; \
    split-window -h -c "#{pane_current_path}" \; \
    split-window -v -c "#{pane_current_path}" "bun run dev" \; \
    select-pane -t 0 \; \
    send-keys "nvim" Enter \; \
    select-pane -t 1 \; \
    send-keys "git status" Enter \; \
    attach-session -t web-dev
'

# AI-assisted development layout
bind-key -T prefix A run-shell '
    tmux new-session -d -s ai-dev -c "#{pane_current_path}" \; \
    split-window -h -c "#{pane_current_path}" \; \
    split-window -v -c "#{pane_current_path}" "claude --interactive" \; \
    select-pane -t 0 \; \
    send-keys "nvim" Enter \; \
    select-pane -t 1 \; \
    send-keys "aider" Enter \; \
    new-window -c "#{pane_current_path}" \; \
    send-keys "gemini --interactive" Enter \; \
    select-window -t 1 \; \
    select-pane -t 0 \; \
    attach-session -t ai-dev
'

# ----- Smart Pane Switching with Neovim -----
# Smart pane switching with awareness of Neovim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ----- Initialize TPM (keep this at the very bottom) -----
# Install TPM if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize plugin manager
run '~/.tmux/plugins/tpm/tpm'

# ----- Startup Message -----
display-message "🚀 Modern Tmux Configuration Loaded - $(date +'%Y-%m-%d %H:%M')"